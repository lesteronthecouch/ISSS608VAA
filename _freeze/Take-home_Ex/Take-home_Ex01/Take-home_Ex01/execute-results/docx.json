{
  "hash": "5074a85c46a03207b5d11fc81b27ab94",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1 - Data Visualizations in Singapore Residence by Planning Area\"\nauthor: \"PENG Hsiao Yuan\"\nformat: docx\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n## 1. Environment Set-up\n\n## 1.1 Background Information and Data Source\n\nThe data set is downloaded from \"https://www.singstat.gov.sg/\"\n\nFile Name: \"Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024\"\n\n## 1.2 Data Processing\n\nImporting Data and Install Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\necho = FALSE\npacman::p_load(\n  tidyverse, haven, knitr,\n  patchwork, ggthemes, scales,\n  ggridges, ggpubr, gganimate,\n  ggdist, ggtext, ggalt,\n  cowplot, ggnewscale,\n  sf, viridis\n)\n```\n:::\n\n\nLoading and Installing Packages\n\n## 1.3 Read the file and Clean BOM\n\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_lines <- readLines(\"respopagesex2024/respopagesex2024.csv\", encoding = \"UTF-8\")\nwriteLines(raw_lines, \"respopagesex2024/respopagesex2024_clean.csv\", useBytes = TRUE)\n```\n:::\n\n\n## 1.4 Read the Clean File\n\n\n::: {.cell}\n\n```{.r .cell-code}\necho = FALSE\ndf <- read_csv(\"respopagesex2024/respopagesex2024_clean.csv\",  skip_empty_rows = TRUE)\n\ndf <- df %>%\n  mutate(\n    Age = suppressWarnings(as.numeric(Age)),\n    Pop = suppressWarnings(as.numeric(Pop))\n  )\n\ndf_clean <- df %>%\n  filter(!is.na(Pop) & !is.na(Age))\nshow_col_types = FALSE\n```\n:::\n\n\n## 2 Population Distributions by Planning Area\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(\n  PA = c(\"Planning Area\"),\n  SZ = c(\"Subzone\"),\n  Age = c(\"Age\"),\n  Sex = c(\"Sex\"),\n  Pop = c(\"Population\"),\n  Time = c(\"Time\")\n)\ndf %>%\n  knitr::kable(caption = \"Column Information\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Column Information\n\n|PA            |SZ      |Age |Sex |Pop        |Time |\n|:-------------|:-------|:---|:---|:----------|:----|\n|Planning Area |Subzone |Age |Sex |Population |Time |\n\n\n:::\n:::\n\n\n## 2.1 Task Objective\n\nAssuming the role of the graphical editor of the media company, you are tasked to prepare at most three data visualizations for the article.\n\n## 2.2 Data Preparation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_summary <- df_clean %>%\n  group_by(PA) %>%\n  summarise(\n    Total_Pop = sum(Pop, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  arrange(desc(Total_Pop))\n```\n:::\n\n\n## 2.3 Plot the Graph\n\nThe code below plots the distributions of population.\n\nX: Planning area\n\nY: Total population by area in 2024\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbottom10_pa <- df_summary %>%\n  slice_min(Total_Pop, n = 10) %>%\n  pull(PA)\n\ndf_summary_filtered <- df_summary %>%\n  filter(!PA %in% bottom10_pa)\n\nggplot(df_summary_filtered, aes(x = reorder(PA, -Total_Pop), y = Total_Pop)) +\n  geom_bar(stat = \"identity\", color = \"black\", fill = \"lightblue\", width = 0.75) +\n  scale_y_continuous(labels = scales::comma, expand = c(0, 0)) +  \n  labs(\n    x = \"Planning Area\",\n    y = \"Total Population\",\n    title = \"Total Population by Planning Area (2024)\"\n  ) +\n  theme_classic(base_size = 26) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-6-1.png)\n:::\n:::\n\n\n## 2.4 Analysis\n\nThe bar chart above suggests that **Tampines** are the most populated area according to the survey. This outcome also indicates that the outskirt area such as **Tampines**, **Bedok**, **Jurong West** and **Woodlands** are among the most populated residential area. This could be attributed to the higher rent in the central area, convenient public transportation nationwide or greener environment.\n\nAs a media company, the marketing department is able to allocate more resources on advertisement on the area which has higher population density. By analyzing population of each planning area and the resources invested in that area, companies are able to evaluate the KPI of the advertisement to further adjust the strategies.\n\n##3.The Generation Strucutre Ratio by Planning Area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndf <- read_csv(\"respopagesex2024/respopagesex2024_clean.csv\",\n               skip_empty_rows = TRUE,\n               show_col_types = FALSE) %>%\n  rename(Age_raw = Age) %>%                      \n  mutate(\n    Age = suppressWarnings(as.numeric(Age_raw)), \n    Pop = suppressWarnings(as.numeric(Pop))\n  )\n\ndf_clean <- df %>%\n  filter(!is.na(Pop))\n```\n:::\n\n\n## 3.1 Grouping\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(\n  Children = c(\"0-14\"),\n  Adults = c(\"15-64\"),\n  Seniors = c(\"Above 65\"),\n)\n\ndf %>%\n  knitr::kable(caption = \"Column Information\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Column Information\n\n|Children |Adults |Seniors  |\n|:--------|:------|:--------|\n|0-14     |15-64  |Above 65 |\n\n\n:::\n:::\n\n\n## 3.2 Data Processing and Cleaning\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_clean <- df_clean %>%\n  mutate(AgeGroup = case_when(\n    Age_raw == \"90_and_Over\"    ~ \"Seniors\",      \n    Age >= 0  & Age <= 14       ~ \"Children\",\n    Age >= 15 & Age <= 64       ~ \"Adults\",\n    Age >= 65                   ~ \"Seniors\",\n    TRUE                        ~ NA_character_\n  )) %>%\n  filter(!is.na(AgeGroup))                     \n\ndf_percent <- df_clean %>%\n  group_by(PA, AgeGroup) %>%\n  summarise(Pop = sum(Pop, na.rm = TRUE), .groups = \"drop\") %>%\n  group_by(PA) %>%\n  mutate(\n    Total_Pop = sum(Pop),\n    Percent   = Pop / Total_Pop * 100\n  ) %>%\n  filter(Percent > 0)      \n```\n:::\n\n\n## 3.3 Plotting the Graph\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(df_percent, aes(\n    x    = reorder(PA, -Total_Pop),\n    y    = Percent,\n    fill = AgeGroup\n  )) +\n  geom_bar(stat = \"identity\",\n           position = \"stack\",\n           width = 0.5,\n           color = \"black\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 1)) +\n  scale_fill_manual(\n    values = c(\"Children\" = \"lightblue\", \"Adults\" = \"lightgray\", \"Seniors\" = \"navy\")\n  ) +\n  labs(\n    title = \"Age Structure by Planning Area\",\n    x     = \"Planning Area\",\n    y     = \"Ratio\",\n    fill  = \"Age Group\"\n  ) +\n  theme_minimal(base_size = 20) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-10-1.png)\n:::\n:::\n\n\n## 3.4 Analysis\n\nBy analyzing the population structures of a specific area, media companies are able to advertise the products or the service according to the age distributions. By targeting the majority generation of a specific area, tha advertisements are more likely to reach it's target customer, further improving the KPI of the expenses.If done properly, the advertisement could enhance the sales of a products significantly.\n\n# 4. Part 2 - Graph Evaluation\n\n# 4.1 Environment Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- read_csv(\"respopagesex2024/respopagesex2024.csv\") %>%\n  mutate(Age = ifelse(Age == \"90_and_Over\", \"95\", Age),\n         Age = as.numeric(Age)) %>%\n  drop_na(Age)\n```\n:::\n\n\n# 4.2 Figure 1\n\n# 4.2.1 Plot the Graph\n\n::: {.cell}\n\n```{.r .cell-code}\npyramid_data <- data %>%\n  group_by(Age, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  mutate(Pop = if_else(Sex == \"Males\", -Pop, Pop))\n\npyramid_plot <- ggplot(pyramid_data, aes(x = Age, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_flip() +\n  scale_y_continuous(labels = abs) +\n  labs(title = \"Singapore Resident Population Pyramid (2024)\",\n       x = \"Age\", y = \"Population\") +\n  theme_minimal()\n\npyramid_plot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-12-1.png)\n:::\n:::\n\n\n# 4.2.2 Comment :\n\n# Improvement: \n\n1. The width of the bars are too thin to distinguish the counter population of the other gender. \n\n2. There should be some spaces between bars to identify the different age.\n\n3. The data should be grouped to illustrate the distributions more clearly.\n\n# Good Points\n\n1.The parameters of the horizontal axis are properly scaled to illustrate the numbers of the population of two genders.\n\n2. The selections of the type of graph are very clear in contrasting the difference of population between genders unser certain ages.\n\n3.There are outlier which is easy for readers to ignore the data.\n\n\n# 4.2.3 Revised version:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\n\ndata_binned <- data %>%\n  mutate(\n    age_group = cut(\n      Age,\n      breaks = seq(0, 100, by = 5),     \n      right = FALSE,                      \n      labels = paste0(seq(0, 95, by = 5), \"-\", seq(4, 99, by = 5))\n    ),\n    age_group = factor(\n      age_group,\n      levels = paste0(seq(0, 95, by = 5), \"-\", seq(4, 99, by = 5))\n    )\n  )\n\npyramid_data <- data_binned %>%\n  group_by(age_group, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  mutate(\n    Pop = if_else(Sex == \"Males\", -Pop, Pop)\n  )\n\nggplot(pyramid_data, aes(x = age_group, y = Pop, fill = Sex)) +\n  geom_col(width = 0.8) +\n  coord_flip() +\n  scale_y_continuous(\n    labels = function(x) comma(abs(x), accuracy = 1),  \n    breaks = pretty_breaks(n = 8)\n  ) +\n  labs(\n    title = \"Singapore Resident Population Pyramid (2024)\",\n    x = \"Age Group (5-year bins)\",\n    y = \"Population\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 8),\n    axis.text.x = element_text(size = 8)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-docx/unnamed-chunk-13-1.png)\n:::\n:::\n\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}